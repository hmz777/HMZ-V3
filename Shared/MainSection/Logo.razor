@if (IsHome)
{
    <a @onclick="TransitionToHome" class="logo logo--@Size" href="/">
        <span>HMZ</span>
    </a>
}
else
{
    <a class="logo logo--@Size" href="/">
        <span>HMZ</span>
    </a>
}

@code {
    [Parameter] public string Size { get; set; }

    [Inject] NavigationManager NavigationManager { get; set; }
    [Inject] IJSRuntime JSRuntime { get; set; }

    IJSObjectReference AnimeJsModule;

    bool IsHome = true;

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += CheckIfHome;

        CheckIfHome(null, null);

        if (IsHome)
        {
            AnimeJsModule = await JSRuntime.InvokeAsync<IJSObjectReference>(
                  "import", "./js/modules/animejsModule.js");
        }

        AnimeJsModule = await JSRuntime.InvokeAsync<IJSObjectReference>(
          "import", "./js/modules/animejsModule.js");
    }

    private void CheckIfHome(object sender, LocationChangedEventArgs eventArgs)
    {
        IsHome = NavigationManager.ToBaseRelativePath(NavigationManager.Uri) == "";
        StateHasChanged();
    }

    private async Task TransitionToHome()
    {
        await AnimeJsModule.InvokeVoidAsync("PageTransition", "home", true);
    }

    public async ValueTask DisposeAsync()
    {
        NavigationManager.LocationChanged -= CheckIfHome;
        await AnimeJsModule.DisposeAsync();
    }
} 